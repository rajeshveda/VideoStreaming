{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/unicornsports/src/components/Admin/index.js\";\nimport React, { Component } from 'react';\nimport { API, graphqlOperation, Auth } from 'aws-amplify';\nimport { Form, TagInput, InputGroup, ButtonToolbar, Button, toaster, Notification, Divider } from 'rsuite';\nimport ReloadIcon from '@rsuite/icons/Reload';\nimport { createChannel, updateChannel, createStreamKey } from '../../graphql/mutations';\nimport NavBar from '../NavBar';\nimport { getChannel } from '../../graphql/queries';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChannelAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setFormValue = formValue => {\n      this.setState({\n        item: formValue\n      });\n    };\n\n    this.displayNotification = (type, header, text) => {\n      toaster.push( /*#__PURE__*/_jsxDEV(Notification, {\n        type: type,\n        header: header,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }, this), {\n        placement: 'topStart'\n      });\n      setTimeout(function () {\n        toaster.clear();\n      }, 5000);\n    };\n\n    this.submit = async valid => {\n      const {\n        item,\n        user,\n        newChannel\n      } = this.state;\n      console.log(item);\n\n      if (valid) {\n        /* Location 6 */\n      }\n    };\n\n    this.generateKey = async () => {\n      const {\n        newChannel,\n        user\n      } = this.state;\n\n      if (!newChannel) {\n        /* Location 7 */\n      } else {\n        //Show error \n        this.displayNotification('error', 'Error', 'Please provide a stream title and save it before generating a stream key');\n      }\n    };\n\n    this.state = {\n      newChannel: true,\n      item: {},\n      user: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      name\n    } = this.props;\n    const input = {\n      id: name\n    };\n    /* Location 4 */\n\n    /* Location 5 */\n  }\n\n  render() {\n    const {\n      user,\n      item\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adminPage\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        profile: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        children: \"Channel Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formHolder\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onChange: formValue => this.setFormValue(formValue),\n          onSubmit: this.submit,\n          formValue: item,\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"id\",\n            children: [/*#__PURE__*/_jsxDEV(Form.ControlLabel, {\n              children: \"Channel Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"id\",\n              readOnly: true,\n              value: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.HelpText, {\n              children: \"Channel Name is auto created\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(Form.ControlLabel, {\n              children: \"Stream Titile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.HelpText, {\n              children: \"Stream Title is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(Form.ControlLabel, {\n              children: \"Stream Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.HelpText, {\n              children: \"Stream Description is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"tags\",\n            children: [/*#__PURE__*/_jsxDEV(Form.ControlLabel, {\n              children: \"Stream Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"tags\",\n              accepter: TagInput,\n              style: {\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.HelpText, {\n              children: \"Press enter to create a new tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"ingestEndpoint\",\n            children: [/*#__PURE__*/_jsxDEV(Form.ControlLabel, {\n              children: \"Ingest Endpoint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"ingestEndpoint\",\n              readOnly: true,\n              value: item.ingestEndpoint ? `rtmps://${item.ingestEndpoint}:443/app/` : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.HelpText, {\n              children: \"Auto generated.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"streamKey\",\n            children: [/*#__PURE__*/_jsxDEV(Form.ControlLabel, {\n              children: \"Stream Key\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              style: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"streamKey\",\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup.Button, {\n                onClick: this.generateKey,\n                children: /*#__PURE__*/_jsxDEV(ReloadIcon, {\n                  color: \"#3498FF\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.HelpText, {\n              children: \"Auto Generated. Click the key to generate one\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                appearance: \"primary\",\n                type: \"Update\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default ChannelAdmin;","map":{"version":3,"sources":["/home/ec2-user/environment/unicornsports/src/components/Admin/index.js"],"names":["React","Component","API","graphqlOperation","Auth","Form","TagInput","InputGroup","ButtonToolbar","Button","toaster","Notification","Divider","ReloadIcon","createChannel","updateChannel","createStreamKey","NavBar","getChannel","ChannelAdmin","constructor","props","setFormValue","formValue","setState","item","displayNotification","type","header","text","push","placement","setTimeout","clear","submit","valid","user","newChannel","state","console","log","generateKey","componentDidMount","name","input","id","render","username","width","ingestEndpoint"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    API, graphqlOperation, Auth\n  } from 'aws-amplify';\nimport { Form, TagInput, InputGroup, ButtonToolbar, Button, toaster, Notification, Divider} from 'rsuite';\nimport ReloadIcon from '@rsuite/icons/Reload';\nimport { createChannel, updateChannel, createStreamKey } from '../../graphql/mutations';\nimport NavBar from '../NavBar';\nimport { getChannel } from '../../graphql/queries';\nimport './index.css';\n\nclass ChannelAdmin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newChannel: true,\n            item: {},\n            user: {}\n        }\n    }\n\n    componentDidMount() {\n        const { name } = this.props;\n        const input = {\n            id: name,\n        };\n        /* Location 4 */\n\n        /* Location 5 */\n        \n    }\n\n    setFormValue = (formValue) => {\n        this.setState({\n            item: formValue\n        });\n    }\n\n    displayNotification = (type, header, text) => {\n        toaster.push(<Notification type={type} header={header}>{text}</Notification>, {\n            placement:'topStart',\n        });\n        setTimeout(function () {\n            toaster.clear();\n        }, 5000);\n    }\n\n    submit = async (valid) => {\n        const { item, user, newChannel } = this.state;\n        console.log(item);\n        if (valid){\n            /* Location 6 */\n        }\n    }\n\n    generateKey = async () => {\n        const { newChannel, user } = this.state;\n        if (!newChannel) {\n            /* Location 7 */\n        } else {\n            //Show error \n            this.displayNotification('error', 'Error', 'Please provide a stream title and save it before generating a stream key');\n        }\n    }\n    \n\n    render() {\n        const { user, item } = this.state;\n        return (\n        <div className=\"adminPage\">\n            <NavBar profile={user.username}/>\n            <Divider>Channel Management</Divider>\n            <div className=\"formHolder\">\n                <Form \n                onChange={formValue=> this.setFormValue(formValue)}\n                onSubmit={this.submit}\n                formValue={item}\n                fluid>\n                    <Form.Group controlId=\"id\">\n                        <Form.ControlLabel>Channel Name</Form.ControlLabel>\n                        <Form.Control name=\"id\" readOnly  value={user.username}/>\n                        <Form.HelpText>Channel Name is auto created</Form.HelpText>\n                    </Form.Group>\n                    <Form.Group controlId=\"title\">\n                        <Form.ControlLabel>Stream Titile</Form.ControlLabel>\n                        <Form.Control name=\"title\" />\n                        <Form.HelpText>Stream Title is required</Form.HelpText>\n                    </Form.Group>\n                    <Form.Group controlId=\"description\">\n                        <Form.ControlLabel>Stream Description</Form.ControlLabel>\n                        <Form.Control name=\"description\" />\n                        <Form.HelpText>Stream Description is required</Form.HelpText>\n                    </Form.Group>\n                    <Form.Group controlId=\"tags\">\n                        <Form.ControlLabel>Stream Tags</Form.ControlLabel>\n                        <Form.Control name=\"tags\" accepter={TagInput}  style={{ width: '100%' }} />\n                        <Form.HelpText>Press enter to create a new tag</Form.HelpText>\n                    </Form.Group>\n                    <Form.Group controlId=\"ingestEndpoint\">\n                        <Form.ControlLabel>Ingest Endpoint</Form.ControlLabel>\n                        <Form.Control name=\"ingestEndpoint\" readOnly value={item.ingestEndpoint?`rtmps://${item.ingestEndpoint}:443/app/`:''} />\n                        <Form.HelpText>Auto generated.</Form.HelpText>\n                    </Form.Group>\n                    <Form.Group controlId=\"streamKey\">\n                        <Form.ControlLabel>Stream Key</Form.ControlLabel>\n                        <InputGroup style={{ width: '100%' }}>\n                            <Form.Control name=\"streamKey\" readOnly />\n                            <InputGroup.Button onClick={this.generateKey}>\n                                <ReloadIcon color=\"#3498FF\"/>\n                            </InputGroup.Button>\n                        </InputGroup>\n                        <Form.HelpText>Auto Generated. Click the key to generate one</Form.HelpText>\n                    </Form.Group>\n                    <Form.Group>\n                        <ButtonToolbar>\n                            <Button appearance=\"primary\" type=\"Update\">Submit</Button>\n                        </ButtonToolbar>\n                    </Form.Group>\n                </Form>\n            </div>\n        </div>\n        );\n    }\n}\n\n\n\nexport default ChannelAdmin;\n"]},"metadata":{},"sourceType":"module"}