{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/unicornsports/src/components/CarouselView/index.jsx\";\n\n/* eslint-disable import/order */\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './index.css';\nimport GridCardView from '../GridCardView';\nimport SlideButton from '../SlideButtons';\nimport { API, graphqlOperation } from 'aws-amplify';\n/* Location 13 */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CarouselView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.useSizeElement = () => {\n      const width = this.viewRef.current.clientWidth;\n      return {\n        width\n      };\n    };\n\n    this.handlePrev = () => {\n      const {\n        activeItemIndex\n      } = this.state;\n      const newActive = activeItemIndex - 1;\n\n      if (newActive >= 0) {\n        this.setLocation(newActive);\n      }\n    };\n\n    this.setLocation = active => {\n      this.setState({\n        activeItemIndex: active,\n        slideDistance: active * -176 - 75\n      });\n    };\n\n    this.handleNext = () => {\n      const width = this.viewRef.current.clientWidth;\n      const {\n        activeItemIndex,\n        items\n      } = this.state;\n      const currentCount = items.length;\n      const totalInView = Math.floor(width / 176) - 1;\n      const newActive = activeItemIndex + 1;\n\n      if (newActive < currentCount - totalInView) {\n        this.setLocation(newActive);\n      }\n    };\n\n    this.drawTitle = () => {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"carouselTitle\",\n        children: \"Live right now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      choosenItem: {},\n      sources: [],\n      items: [],\n      activeItemIndex: 0,\n      slideDistance: -75,\n      username: props.username\n    };\n    this.viewRef = /*#__PURE__*/React.createRef();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const newState = state;\n    const {\n      username\n    } = props;\n    newState.username = username;\n    return newState;\n  }\n\n  componentDidMount() {\n    let {\n      width\n    } = this.useSizeElement();\n    const input = {};\n    /* Location 14 */\n  }\n\n  render() {\n    const {\n      items,\n      width,\n      slideDistance\n    } = this.state;\n    const style = {\n      transform: `translate3d(${slideDistance}px, 0, 0)`,\n      width: width\n    };\n    const itemHTML = items.map(item => /*#__PURE__*/_jsxDEV(Link, {\n      className: \"carouselCard\",\n      to: `/${item.id}`,\n      \"aria-label\": item.title,\n      children: /*#__PURE__*/_jsxDEV(GridCardView, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 95\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this));\n\n    if (items.length < 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.viewRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }, this);\n    }\n\n    console.log(items);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.viewRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carouselFrame\",\n        children: [this.drawTitle(), /*#__PURE__*/_jsxDEV(SlideButton, {\n          onClick: this.handlePrev,\n          type: \"prev\",\n          width: width\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SlideButton, {\n          onClick: this.handleNext,\n          type: \"next\",\n          width: width\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carouselContainer\",\n          style: style,\n          children: itemHTML\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CarouselView;","map":{"version":3,"sources":["/home/ec2-user/environment/unicornsports/src/components/CarouselView/index.jsx"],"names":["React","Component","Link","GridCardView","SlideButton","API","graphqlOperation","CarouselView","constructor","props","useSizeElement","width","viewRef","current","clientWidth","handlePrev","activeItemIndex","state","newActive","setLocation","active","setState","slideDistance","handleNext","items","currentCount","length","totalInView","Math","floor","drawTitle","choosenItem","sources","username","createRef","getDerivedStateFromProps","newState","componentDidMount","input","render","style","transform","itemHTML","map","item","id","title","console","log"],"mappings":"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","sourcesContent":["/* eslint-disable import/order */\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './index.css';\nimport GridCardView from '../GridCardView';\nimport SlideButton from '../SlideButtons';\nimport {\n  API, graphqlOperation,\n} from 'aws-amplify';\n\n/* Location 13 */\n\nclass CarouselView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      choosenItem: {},\n      sources: [],\n      items: [],\n      activeItemIndex: 0,\n      slideDistance: -75,\n      username: props.username,\n    };\n    this.viewRef = React.createRef();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const newState = state;\n    const { username } = props;\n    newState.username = username;\n    return newState;\n  }\n\n  componentDidMount() {\n    let { width } = this.useSizeElement();\n    const input = {};\n    /* Location 14 */\n  }\n\n  useSizeElement = () => {\n    const width = this.viewRef.current.clientWidth;\n    return { width };\n  }\n\n  handlePrev = () => {\n    const { activeItemIndex } = this.state;\n    const newActive = activeItemIndex - 1;\n    if (newActive >= 0) {\n      this.setLocation(newActive);\n    }\n  }\n\n  setLocation = (active) => {\n    this.setState({\n      activeItemIndex: active,\n      slideDistance: (active * -176) - 75,\n    });\n  }\n\n  handleNext = () => {\n    const width = this.viewRef.current.clientWidth;\n    const { activeItemIndex, items } = this.state;\n    const currentCount = items.length;\n    const totalInView = Math.floor(width / 176) - 1;\n    const newActive = activeItemIndex + 1;\n    if (newActive < currentCount - totalInView) {\n      this.setLocation(newActive);\n    }\n  }\n\n  drawTitle = () => {\n    return (\n      <h3 className=\"carouselTitle\">\n        Live right now!\n      </h3>\n    );\n  }\n\n  render() {\n    const {\n      items,\n      width,\n      slideDistance,\n    } = this.state;\n    const style = {\n      transform: `translate3d(${slideDistance}px, 0, 0)`,\n      width: width,\n    };\n    const itemHTML = items.map((item) => (\n      <Link className=\"carouselCard\" to={`/${item.id}`} aria-label={item.title} key={item.id}><GridCardView item={item} /></Link>\n    ));\n    if (items.length < 1) {\n      return (<div ref={this.viewRef} />);\n    }\n    console.log(items);\n    return (\n      <div ref={this.viewRef}>\n        <div className=\"carouselFrame\">\n          {this.drawTitle()}\n          <SlideButton onClick={this.handlePrev} type=\"prev\" width={width} />\n          <SlideButton onClick={this.handleNext} type=\"next\" width={width} />\n          <div className=\"carouselContainer\" style={style}>\n            {itemHTML}\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default CarouselView;\n"]},"metadata":{},"sourceType":"module"}