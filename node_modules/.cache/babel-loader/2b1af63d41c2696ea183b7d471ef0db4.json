{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/unicornsports/src/components/Channel/index.js\";\nimport React, { Component } from 'react';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { FlexboxGrid, Avatar, Tag, TagGroup } from 'rsuite';\nimport Video from '../Video';\nimport NavBar from '../NavBar';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getPublicChannel =\n/* GraphQL */\n`\n        query GetChannel($id: ID!) {\n            getChannel(id: $id) {\n                id\n                title\n                description\n                streamURL\n            }\n        }\n    `;\n\nclass Channel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.tags = () => {\n      const {\n        item\n      } = this.state; // Harded coded for now \n\n      item.tags = ['english', 'livestream', 'coding'];\n      const tagHTML = item.tags.map(item => /*#__PURE__*/_jsxDEV(Tag, {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this));\n      return tagHTML;\n    };\n\n    this.drawVideoPlayer = () => {\n      const {\n        item\n      } = this.state;\n\n      if (item.streamURL) {\n        /* Location 12 */\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this);\n      }\n    };\n\n    this.state = {\n      item: {\n        tags: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      name\n    } = this.props;\n    const input = {\n      id: name\n    };\n    /* Location 9 */\n  }\n\n  render() {\n    const {\n      name\n    } = this.props;\n    const {\n      item\n    } = this.state;\n    const profile = {\n      name: name\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        profile: profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titleDesktop\",\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videoPlayer\",\n        children: [this.drawVideoPlayer(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titleMobile\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            circle: true,\n            children: name.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channelName\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewCount\",\n          children: \"1000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tagGroup\",\n          children: /*#__PURE__*/_jsxDEV(TagGroup, {\n            children: this.tags()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"desc\",\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Channel;","map":{"version":3,"sources":["/home/ec2-user/environment/unicornsports/src/components/Channel/index.js"],"names":["React","Component","API","graphqlOperation","FlexboxGrid","Avatar","Tag","TagGroup","Video","NavBar","getPublicChannel","Channel","constructor","props","tags","item","state","tagHTML","map","drawVideoPlayer","streamURL","componentDidMount","name","input","id","render","profile","title","charAt","toUpperCase","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    API, graphqlOperation,\n  } from 'aws-amplify';\nimport { FlexboxGrid, Avatar, Tag, TagGroup } from 'rsuite';\n\nimport Video from '../Video';\nimport NavBar from '../NavBar';\nimport './index.css';\n\nconst getPublicChannel = /* GraphQL */ `\n        query GetChannel($id: ID!) {\n            getChannel(id: $id) {\n                id\n                title\n                description\n                streamURL\n            }\n        }\n    `;\n\n\n\nclass Channel extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: {\n                tags:[]\n            }\n        };\n      }\n\n      componentDidMount() {\n        const { name } = this.props;\n        const input = {\n            id: name,\n        };\n        /* Location 9 */\n    }\n\n    tags = () => {\n        const { item } = this.state;\n        // Harded coded for now \n        item.tags =  ['english', 'livestream', 'coding'];\n        const tagHTML = item.tags.map((item) => (\n            <Tag>{item}</Tag>\n        ));\n        return tagHTML;\n    }\n\n    drawVideoPlayer = () => {\n        const { item } = this.state;\n        if (item.streamURL) {\n            /* Location 12 */\n        } else {\n            return (<div></div>);\n        }\n    }\n\n\n    render() {\n        const { name } = this.props;\n        const { item } = this.state;\n        const profile = {name:name};\n        return (\n        <div className=\"channel\">\n            <NavBar profile={profile}/>\n            <div className=\"titleDesktop\">\n                {item.title}\n            </div>\n            <div className=\"videoPlayer\">\n                {this.drawVideoPlayer()}\n                <div className=\"titleMobile\">\n                    {item.title}\n                </div>\n                <div className=\"avatar\">\n                    <Avatar circle>{name.charAt(0).toUpperCase()}</Avatar>\n                </div>\n                <div className=\"channelName\">\n                    {name}\n                </div>\n                <div className=\"viewCount\">\n                    1000\n                </div>\n                <div className=\"tagGroup\">\n                    <TagGroup >\n                        {this.tags()}\n                    </TagGroup>\n                </div>\n\n                <div className=\"desc\">\n                    {item.description}\n                </div>\n                    \n            </div>\n        </div>\n        );\n    }\n}\n\n\n\nexport default Channel;\n"]},"metadata":{},"sourceType":"module"}